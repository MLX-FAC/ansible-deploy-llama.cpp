- name: Install MiniConda and Docker Engine
  hosts: all
  tasks:
    - name: Check if MiniConda is installed
      stat:
        path: "~/miniconda3"
      register: miniconda_dir

    # Install Miniconda
    #
    #
    #
    - name: Install MiniConda
      block:
        - name: Create MiniConda directory
          file:
            path: "~/miniconda3"
            state: directory

        - name: Download MiniConda installer
          get_url:
            url: https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
            dest: "~/miniconda3/miniconda.sh"

        - name: Install MiniConda
          shell: bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3
          args:
            creates: "~/miniconda3/bin/conda"

        - name: Remove MiniConda installer
          file:
            path: "~/miniconda3/miniconda.sh"
            state: absent

        - name: Initialize MiniConda (bash)
          command: ~/miniconda3/bin/conda init bash

        - name: Initialize MiniConda (zsh)
          command: ~/miniconda3/bin/conda init zsh
      when: miniconda_dir.stat.exists == false

    # Install Docker Engine
    #
    #
    #
    - name: Check if Docker is installed
      command: docker --version
      register: docker_installed
      ignore_errors: true

    - name: Install Docker Engine
      become: yes
      block:
        - name: Update apt cache
          apt:
            update_cache: yes

        - name: Install required packages
          apt:
            name:
              - ca-certificates
              - curl
              - apt-transport-https
              - lsb-release
            state: present

        - name: Add Docker's official GPG key
          apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present

        - name: Set up the Docker repository
          apt_repository:
            repo: deb [arch={{ ansible_architecture }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
            filename: docker

        - name: Install Docker Engine
          apt:
            name:
              - docker-ce
              - docker-ce-cli
              - containerd.io
              - docker-buildx-plugin
              - docker-compose-plugin
            state: present
      when: docker_installed.rc != 0

    # Create a ~/mlx-deploy directory and copy the model.gguf over
    # and then docker compose
    #
    #
    - name: Transfer Model over
      block:
        - name: Create mlx-deploy directory
          file:
            path: "~/mlx-deploy"
            state: directory

        - name: Copy model.gguf to mlx-deploy directory
          copy:
            src: "/tmp/mlx-deploy/model.gguf"
            dest: "~/mlx-deploy/model.gguf"

        - name: Copy docker-compose.yaml to mlx-deploy directory
          copy:
            src: "./docker-compose.yaml"
            dest: "~/mlx-deploy/docker-compose.yaml"

        - name: Docker Compose Up
          shell: docker compose -f ~/mlx-deploy/docker-compose.yaml up -d
          args:
            chdir: ~/mlx-deploy