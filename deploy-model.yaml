- name: Install MiniConda and Docker Engine
  hosts: all
  tasks:
    - name: Check if MiniConda is installed
      stat:
        path: "~/miniconda3"
      register: miniconda_dir

    # Install Miniconda
    #
    #
    #
    - name: Install MiniConda
      block:
        - name: Create MiniConda directory
          file:
            path: "~/miniconda3"
            state: directory

        - name: Download MiniConda installer
          get_url:
            url: https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
            dest: "~/miniconda3/miniconda.sh"

        - name: Install MiniConda
          shell: bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3
          args:
            creates: "~/miniconda3/bin/conda"

        - name: Remove MiniConda installer
          file:
            path: "~/miniconda3/miniconda.sh"
            state: absent

        - name: Initialize MiniConda (bash)
          command: ~/miniconda3/bin/conda init bash

        - name: Initialize MiniConda (zsh)
          command: ~/miniconda3/bin/conda init zsh
      when: miniconda_dir.stat.exists == false

    # Install Docker Engine
    #
    #
    #
    - name: Install required packages for Docker
      apt:
        update_cache: yes
        name: ['ca-certificates', 'curl']
        state: present
      become: true

    - name: Create keyring directory for Docker
      file:
        path: /etc/apt/keyrings
        state: directory
      become: true

    - name: Add Dockerâ€™s official GPG key
      command: curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
      become: true

    - name: Set correct permissions for the Docker GPG key
      file:
        path: /etc/apt/keyrings/docker.asc
        mode: 'a+r'
      become: true

    - name: Add Docker repository
      shell: >
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo $VERSION_CODENAME) stable" |
        tee /etc/apt/sources.list.d/docker.list > /dev/null
      become: true

    - name: Update apt cache after adding Docker repository
      apt:
        update_cache: yes
      become: true

    - name: Install Docker Engine and additional tools
      apt:
        name: ['docker-ce', 'docker-ce-cli', 'containerd.io', 'docker-buildx-plugin', 'docker-compose-plugin']
        state: latest
      become: true

    # Create a ~/mlx-deploy directory and copy the model.gguf over
    # and then docker compose
    #
    #
    - name: Transfer Model over
      block:
        - name: Create mlx-deploy directory
          file:
            path: "~/mlx-deploy"
            state: directory

        - name: Copy model.gguf to mlx-deploy directory
          copy:
            src: "/tmp/mlx-deploy/model.gguf"
            dest: "~/mlx-deploy/model.gguf"

        - name: Copy docker-compose.yaml to mlx-deploy directory
          copy:
            src: "./docker-compose.yaml"
            dest: "~/mlx-deploy/docker-compose.yaml"

        - name: Docker Compose Up
          shell: sudo docker compose -f ~/mlx-deploy/docker-compose.yaml up -d
          args:
            chdir: ~/mlx-deploy